id: new_agreement
type: Context
properties: { title: Start a new Agreement, _ref: logo.yaml }
layout:
  contentGutter: 16
requests:
  - id: send_confirmation
    type: SendGridMailSend
    connectionId: mailer
    properties:
      to: { name: { _state: name }, email: { _state: mailto } }
      subject: { _nunjucks: 'Email validation for {{name}}' }
      text:
        _nunjucks:
          template: |
            Hi {{name}},

            you have started a new agreement on {{host}}
            using your email address {{mailto}}

            Before you can continue, we'd like to make sure, it was really you.

            Please go to {{base_url}}/confirm?{{signature}}{{initiator}}

            and enter your key as given below.

            We generated the following access key for you: {{encryption_key}}

            Think of it as your password and keep it safe and secret.

            We used this key to encrypt your personal data and can only work with
            this data while you're logged in using that key. When you lose it, all
            your agreement data will be lost, too. We won't be able to recover any
            of it. That's how serious we are about your privacy.

            Cheers
            Team {{host}}
          on:
            name: { _state: name }
            mailto: { _state: mailto }
            host: { _state: host }
            base_url: { _state: base_url }
            signature: { _hash.sha1: { _string.concat: [ _state: initiator, _secret: TOKEN_KEY ] } }
            initiator: { _state: initiator }
            encryption_key: { _state: encryption_key }
areas:
  content:
    blocks:
      - _ref: header.yaml
      - id: title
        type: Title
        properties: { content: Start a new Agreement, level: 1 }
      - id: name
        type: TextInput
        properties: { title: Your name }
        validate:
          - message: The name contains disallowed characters.
            status: error
            pass: { _regex: { pattern: '^[^"=?<>]*$' } }
      - id: mailto
        type: TextInput
        required: true
        validate:
          - message: Invalid email address.
            status: error
            pass: { _regex: { pattern: '^[a-z0-9~!$%\-_+:.\x80-\xff]+@([a-z0-9]+(--?[a-z0-9]+)*\.)+[a-z0-9]+$', flags: i } }
        properties: { title: Your email address }
      - id: block_id
        type: Button
        properties: { icon: SendOutlined, title: Submit }
        events:
          onClick:
            - id: set_state_0
              type: SetState
              params:
                mailbox_name: { _string.replace: { on: { _state: mailto }, regex: '@.+', newSubstr: '' } }
                host: { _location: host }
                base_url: { _location: origin }
            - id: set_state_1
              type: SetState
              params:
                name:
                  _if:
                    test: { _eq: [ _if_none: [ _state: name, '' ], '' ] }
                    then: { _state: mailbox_name }
                    else: { _state: name }
            - id: validate_all
              type: Validate
            - id: create_aes_gcm_key
              type: JsAction
              params: { name: aesGcmCreateKey }
            - id: encrypt_initiator
              type: JsAction
              params:
                name: aesGcmEncrypt
                args:
                  - _json.stringify:
                      on: [ _state: name, _state: mailto ]
                      options: { space: 0 }
                  - _actions: create_aes_gcm_key.response
            - id: set_state_2
              type: SetState
              params:
                encryption_key: { _actions: create_aes_gcm_key.response }
                initiator: { _actions: encrypt_initiator.response }
            - id: send_confirmation
              type: Request
              params: send_confirmation
            - id: link_home
              type: Link
              params: confirmation_sent
